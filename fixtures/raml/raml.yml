#%RAML 0.8
title: Example API
version: 0.1
documentation:
- title: Example API
  content: Our very little example API with 2 endpoints
baseUri: http://testapi.my/
schemas:
- User: |
    {
      "id": "User",
      "title": "User",
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "events_url": {
          "type": "string"
        },
        "followers": {
          "type": "integer"
        },
        "followers_url": {
          "type": "string"
        },
        "following": {
          "type": "integer"
        },
        "following_url": {
          "type": "string"
        },
        "gists_url": {
          "type": "string"
        },
        "gravatar_id": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizations_url": {
          "type": "string"
        },
        "public_repos": {
          "type": "integer"
        },
        "received_events_url": {
          "type": "string"
        },
        "repos_url": {
          "type": "string"
        },
        "site_admin": {
          "type": "boolean"
        },
        "starred_url": {
          "type": "string"
        },
        "subscriptions_url": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    }
/hello:
  get:
    displayName: Hello
    description: Successful greeting of the world
    responses:
      200:
        description: Successful greeting of the world
/user:
  /{username}:
    uriParameters:
      username:
        type: string
        default: octocat
        required: true
        displayName: username
    get:
      displayName: UserByUsername
      description: Successful getting of user details
      responses:
        200:
          description: Successful getting of user details
          body:
            application/json:
              schema: User
        404:
          description: 404 error in case user not found
        500:
          description: 500 error in case something bad happens
      headers:
        Content-Type:
          type: string
          default: application/json
          required: true
          displayName: Content-Type
    delete:
      displayName: UserByUsername
      description: User deleted successfully
      responses:
        404:
          description: User not found
        500:
          description: User caused error
    patch:
      body:
        application/json:
          schema: User
      displayName: UserByUsername
      description: User updated successfully
      responses:
        200:
          description: User updated successfully
          body:
            application/json:
              schema: User
      headers:
        Content-Type:
          type: string
          default: application/json
          required: true
          displayName: Content-Type
  post:
    body:
      application/json:
        schema: User
    displayName: User
    description: User created successfully
    responses:
      200:
        description: User created successfully
        body:
          application/json:
            schema: User
    headers:
      Content-Type:
        type: string
        default: application/json
        required: true
        displayName: Content-Type
